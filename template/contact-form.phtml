<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="http://maps.googleapis.com/maps/api/js?key=<?=$apiKey?>&libraries=places&callback=initAutocomplete" async defer></script>
<form method="post" class="adpc-contact-form">
    <?php if (!empty($errorText)) { ?>
        <div class="adpc-error-wrapper">ERROR: <?= $errorText?></div>
    <?php } ?>
    <h3>Calculation in progress...</h3>
    <p>We will email the property value to you once it is calculated.</p>
    <input type="text" style="display:none" name="_adpc_contact_form" value="1">
    <input class="adpc-text-input" type="number" name="lead-id" value="<?= $leadId ?>" style="display: none">
    <label for="email">Email address: *</label>
    <input class="adpc-text-input" type="email" name="email" id="email" required>
    <label for="the-name">Your name:</label>
    <input class="adpc-text-input" type="text" name="the-name" id="the-name" required>
    <label for="adpc-address">Property address:</label>
    <input class="adpc-text-input" type="text" name="address" id="adpc-address" value="" required>
    <input class="adpc-submit" type="submit" value="Calculate" style="margin-top: 20px; float: right">
</form>

<script>
    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('adpc-address')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        // autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;
            }
        }
    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
</script>